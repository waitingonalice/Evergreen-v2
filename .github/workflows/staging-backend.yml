name: Deploy Staging

on:
  push:
    branches: [staging]

defaults:
  run:
    working-directory: ./

jobs:
  setup:
    runs-on: ubuntu-latest
    environment:
      name: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v3
        with:
          path: backend
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Setup environment variables
        run: |
          chmod +x ./scripts/setup-env-backend.sh
          ./scripts/setup-env-backend.sh
        env:
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          SECRET_TOKEN: ${{ secrets.SECRET_TOKEN }}
          SECRET_ANSWER: ${{ secrets.SECRET_ANSWER }}
          SUPPORT_EMAIL_ADDRESS: ${{ secrets.SUPPORT_EMAIL_ADDRESS }}
          SUPPORT_EMAIL_PASSWORD: ${{ secrets.SUPPORT_EMAIL_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          MINIO_URL: ${{ secrets.MINIO_URL }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}

  # migrate-db:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Checkout cache
  #       uses: actions/cache@v3
  #       with:
  #         path: backend
  #         key: ${{ runner.os }}-backend-${{ hashFiles('backend/Pipfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-backend-
  #     - name:
  #       run: |
  #         cd backend
  #         pipenv run migrate

  deploy:
    runs-on: ubuntu-22.04
    # needs: migrate-db
    # environment:
    #   name: staging
    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v4

      # - name: Setup environment variables
      #   run: |
      #     chmod +x ./.github/scripts/setup-env-backend.sh
      #     ./.github/scripts/setup-env-backend.sh
      #   env:
      #     FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      #     SECRET_TOKEN: ${{ secrets.SECRET_TOKEN }}
      #     SECRET_ANSWER: ${{ secrets.SECRET_ANSWER }}
      #     SUPPORT_EMAIL_ADDRESS: ${{ secrets.SUPPORT_EMAIL_ADDRESS }}
      #     SUPPORT_EMAIL_PASSWORD: ${{ secrets.SUPPORT_EMAIL_PASSWORD }}
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #     MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
      #     MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      #     MINIO_URL: ${{ secrets.MINIO_URL }}
      - name: Checkout Cache
        uses: actions/cache@v3
        with:
          path: backend
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Login to GitHub Container Registry
        run: docker login ghcr.io -u ${{ secrets.DOCKER_GH_USER }} -p ${{ secrets.DOCKER_GH_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: "Build, Tag, Push latest"
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/waitingonalice/evergreen-backend:latest

      # - name: Re-Tag and push version
      #   run: |
      #     docker tag ghcr.io/waitingonalice/evergreen-backend:latest ghcr.io/waitingonalice/evergreen-backend:${{ inputs.version }}

      # - name: Push version
      #   run: docker push ghcr.io/evergreen/evergreen-backend:${{ inputs.version }}
