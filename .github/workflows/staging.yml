name: Deploy Staging

on:
  push:
    branches: [staging]

defaults:
  run:
    working-directory: ./

jobs:
  setup-frontend:
    runs-on: ubuntu-latest
    environment:
      name: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v3
        with:
          path: frontend
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/yarn.lock') }}

      - name: Setup environment variables
        run: |
          chmod +x ./scripts/setup-env-frontend.sh
          ./scripts/setup-env-frontend.sh
        env:
          NEXT_PUBLIC_ENDPOINT_URL: ${{ secrets.NEXT_PUBLIC_ENDPOINT_URL }}

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: setup-frontend
    steps:
      - name: Checkout Cache
        uses: actions/cache@v3
        with:
          path: frontend
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/yarn.lock') }}

      - name: Login to GitHub Container Registry
        run: docker login ghcr.io -u ${{ secrets.DOCKER_GH_USER }} -p ${{ secrets.DOCKER_GH_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: "Build, Tag, Push latest"
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/waitingonalice/evergreen-frontend-staging:latest

  setup-backend:
    runs-on: ubuntu-latest
    environment:
      name: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v3
        with:
          path: backend
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/Pipfile.lock') }}

      - name: Setup environment variables
        run: |
          chmod +x ./scripts/setup-env-backend.sh
          ./scripts/setup-env-backend.sh
        env:
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          SECRET_TOKEN: ${{ secrets.SECRET_TOKEN }}
          SECRET_ANSWER: ${{ secrets.SECRET_ANSWER }}
          SUPPORT_EMAIL_ADDRESS: ${{ secrets.SUPPORT_EMAIL_ADDRESS }}
          SUPPORT_EMAIL_PASSWORD: ${{ secrets.SUPPORT_EMAIL_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          MINIO_URL: ${{ secrets.MINIO_URL }}

  deploy-backend:
    runs-on: ubuntu-22.04
    needs: setup-backend
    steps:
      - name: Checkout Cache
        uses: actions/cache@v3
        with:
          path: backend
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/Pipfile.lock') }}

      - name: Login to GitHub Container Registry
        run: docker login ghcr.io -u ${{ secrets.DOCKER_GH_USER }} -p ${{ secrets.DOCKER_GH_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: "Build, Tag, Push latest"
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/waitingonalice/evergreen-backend-staging:latest
